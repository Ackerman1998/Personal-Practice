1.广度优先遍历(消耗最大)
从出发点开始，上下左右依次遍历节点，并将上下左右添加到
一个队列中，然后用上面的方法遍历这些节点，如果遇到标记为
障碍的节点直接跳过，再使用一个字典来记录每个节点的上一个
节点；不断重复这个遍历操作，直到遍历到终点，然后可以根据
字典来得到最佳路径。
2.Dijkstra
跟上面的方法类似，但是在遍历上下左右节点时，会先做一个排序操作：
规则(根据这个点到起点的曼哈顿距离越小越靠前面)，然后依次遍历
这些节点，也可理解为先遍历离起点曼哈顿距离小的点。
3.A*
跟上面的方法类似，但是在遍历上下左右节点时，会先做一个排序操作：
规则(根据这个点到起点的曼哈顿距离+离终点的曼哈顿距离dis越小越靠前面)，
然后依次遍历这些节点，也可理解为先遍历dis距离小的点。

三种方法优缺点比较：
